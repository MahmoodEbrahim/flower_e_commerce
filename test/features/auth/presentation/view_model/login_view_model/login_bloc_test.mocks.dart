// Mocks generated by Mockito 5.4.5 from annotations
// in flower_e_commerce/test/features/auth/presentation/view_model/login_view_model/login_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:flower_e_commerce/core/utils/api_result/api_result.dart' as _i5;
import 'package:flower_e_commerce/features/auth/domain/entity/login_model.dart'
    as _i6;
import 'package:flower_e_commerce/features/auth/domain/repository/auth_repository.dart'
    as _i2;
import 'package:flower_e_commerce/features/auth/domain/usecase/login_usecase.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAuthRepository_0 extends _i1.SmartFake
    implements _i2.AuthRepository {
  _FakeAuthRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [LoginUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginUsecase extends _i1.Mock implements _i3.LoginUsecase {
  MockLoginUsecase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AuthRepository get authRepository => (super.noSuchMethod(
        Invocation.getter(#authRepository),
        returnValue: _FakeAuthRepository_0(
          this,
          Invocation.getter(#authRepository),
        ),
      ) as _i2.AuthRepository);

  @override
  set authRepository(_i2.AuthRepository? _authRepository) => super.noSuchMethod(
        Invocation.setter(
          #authRepository,
          _authRepository,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<_i5.ApiResult<_i6.LoginModel>> call(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [
            email,
            password,
          ],
        ),
        returnValue: _i4.Future<_i5.ApiResult<_i6.LoginModel>>.value(
            _i7.dummyValue<_i5.ApiResult<_i6.LoginModel>>(
          this,
          Invocation.method(
            #call,
            [
              email,
              password,
            ],
          ),
        )),
      ) as _i4.Future<_i5.ApiResult<_i6.LoginModel>>);
}
